# -*- coding: utf-8 -*-
"""LVADSUSR73-Ashutosh-IA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KqR6z7PkHzOkoDbAsuQEZMCVpGKW5IsN
"""

# Q1
import numpy as np
rgb_image= np.array([[[255,0,0],[0,255,0],[0,0,255]],
                     [[255,255,0],[255,0,255],[0,255,255]],
                     [[127,127,127],[200,200,200],[50,50,50]]])
sum=0
rgb_new=np.array([[[]]])
for i in range(3):
  for j in range(3):
    for k in range(3):
      if i==0:
        sum+=0.2989*rgb_image[i][j][k]
      elif j==1:
        sum+=0.5870*rgb_image[i][j][k]
      else:
        sum+=0.1140*rgb_image[i][j][k]

print(sum)

# Q2
health_data={"Height":[180,176,181,135],
             "Weight":[45,55,65,75],
             "Age":[27,23,33,56]}

def fun1(df):
  mean_table=df.mean()
  std_dev=df.std()
  return (mean_table,std_dev)
import pandas as pd
df=pd.DataFrame(health_data)
x,y=fun1(df)
print("Mean=",x)
print("Standard Deviation =", y)

# Q3
import numpy as np

shape = (2, 3, 4)
array = np.random.rand(*shape)
a=array.flatten()
print(array)
print("One D array")
print(a)

b=a.reshape(6,4)

print("2 D Array \n")

print(b)

# Q4
data={'A':[1,2,3,4,5],
      'B':[2,3,1,0,1],
      'C':[1,2,3,1,1]}
df=pd.DataFrame(data)
print(df)
print("\n")
for x in df:
  first=df[x].iloc[0]
  last=df[x].iloc[4]
  improvement=last-first
  perc=(improvement/first)*100
  print("Improvement for ",x," is ",perc)

# Q5

import numpy as np
scores = np.array([
    [80, 75, 85, 90, -1],
    [70, 65, -1, 80, 75],
    [90, 85, 88, -1, 92]
])
def calculate_average_last_three_scores(scores):
    last_three_subjects = scores[:, -3:]
    last_three_subjects[last_three_subjects == -1] = np.nan
    average_scores = np.nanmean(last_three_subjects, axis=1)

    return average_scores
average_scores = calculate_average_last_three_scores(scores)

for i, score in enumerate(average_scores):
    print(f"Average score for student {i+1}: {score}")

print(scores)

# Q6

def fun1(city_temperatures, adjustment_factors):
    adjusted_temperatures = city_temperatures * adjustment_factors[:]
    return adjusted_temperatures


city_data = np.array([[20, 25, 30],
                      [22, 27, 32],
                      [18, 23, 28]])

a_factors = np.array([0.95, 1.02, 0.98])
a_data = fun1(city_data, a_factors)
print(a_data)

# Q7

data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
data=pd.DataFrame(data)
condition=(data['Age']<45) & (data['Department']=='HR')
data1=data[condition]
print(data1)
for i in data1:
  print(i)

# Q8
import pandas as pd

data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}

df = pd.DataFrame(data)
fruit_df = df[df['Category'] == 'Fruit']
p= fruit_df[(fruit_df['Price'] > fruit_df['Price'].mean()) & (fruit_df['Promotion']==False)]

print(p)

# Q9

employee_data = {
    "Employee": ["Alice", "Bob", "Charlie", "David"],
    "Department": ["HR", "IT", "Finance", "IT"],
    "Manager": ["John", "Rachel", "Emily", "Rachel"]
}

project_data = {
    "Employee": ["Alice", "Charlie", "Eve"],
    "Project": ["P1", "P3", "P2"]
}


employee_df = pd.DataFrame(employee_data)

project_m = pd.merge(employee_df, pd.DataFrame(project_data), on=['Department', 'Manager'], how='inner')


print(project_m)